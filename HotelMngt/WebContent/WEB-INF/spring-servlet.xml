   <beans xmlns="http://www.springframework.org/schema/beans" 
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
        xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:p="http://www.springframework.org/schema/p"  
        xmlns:context="http://www.springframework.org/schema/context" 
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:mvc="http://www.springframework.org/schema/mvc" 
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd">
        
        <context:property-placeholder location="classpath:login.properties" />
     
<!-- 	    <import resource="persistence.xml" /> -->
	     
	    <!-- Activates various annotations to be detected in bean classes -->
	    <context:annotation-config />
	    
        <!-- It register the beans in context and scan the annotations inside beans and activate them -->
        <context:component-scan base-package="com.hospitality.controller" />
        <context:component-scan base-package="com.hospitality.bo" />
        <context:component-scan base-package="com.hospitality.boimpl" />
        <context:component-scan base-package="com.hospitality.dao" />
        <context:component-scan base-package="com.hospitality.daoimpl" />
        <context:component-scan base-package="com.hospitality.core" />
        
<!--         <mvc:annotation-driven> -->
<!--         	<mvc:message-converters> -->
<!--         		<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"> -->
<!--         		</bean> -->
<!--         	</mvc:message-converters> -->
<!--         </mvc:annotation-driven> -->
        
        <mvc:default-servlet-handler />
		
		<!-- This allow for dispatching requests to Controllers -->
		<mvc:annotation-driven />
		
		<mvc:resources mapping="/AdminLte/**," location="/, classpath:/WEB-INF/web-resources/,/AdminLte/**"
		cache-period="31556926"/>
		
		<bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
			<property name="viewClass">
				<value>
					org.springframework.web.servlet.view.tiles2.TilesView
				</value>
			</property>
		</bean>
		<bean id="tilesConfigurer"
			class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
			<property name="definitions">
				<list>
					<value>/WEB-INF/tiles.xml</value>
<!-- 					<value>/WEB-INF/matrixAdmin/MatrixTiles.xml</value> -->
				</list>
			</property>
		</bean>
<!-- 		<bean id="viewResolver" -->
<!-- 	        class="org.springframework.web.servlet.view.UrlBasedViewResolver"> -->
<!-- 	        <property name="viewClass"> -->
<!-- 	            <value> -->
<!-- 	                org.springframework.web.servlet.view.tiles3.TilesView -->
<!-- 	            </value> -->
<!-- 	        </property> -->
<!-- 	    </bean> -->
<!-- 	    <bean id="tilesConfigurer" -->
<!-- 	        class="org.springframework.web.servlet.view.tiles3.TilesConfigurer"> -->
<!-- 	        <property name="definitions"> -->
<!-- 	            <list> -->
<!-- 	                <value>/WEB-INF/tiles.xml</value> -->
<!-- 	            </list> -->
<!-- 	        </property> -->
<!-- 	    </bean> -->
		
		<tx:advice id="txAdvice" transaction-manager="transactionManager">
  			<!-- the transactional semantics... -->
			<tx:attributes>
			    <!-- all methods starting with 'get' are read-only -->
			    <tx:method name="get*" read-only="true"/>
			    <tx:method name="retrieve*" read-only="true"/>
			    <tx:method name="show*" read-only="true"/>
			    <!-- other methods use the default transaction settings (see below) -->
			    <tx:method name="*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			</tx:attributes>
		</tx:advice>
		  
		  <!-- ensure that the above transactional advice runs for any execution
		    of an operation defined by the FooService interface -->
		<aop:config>
		  <aop:pointcut id="serviceOperation" expression="execution(* com.hospitality.bo.*.*(..))"/>
		  <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation"/>
		</aop:config>
		
        <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean">
                <property name="persistenceUnitName" value="PERSISTENCE_UNIT" />
        </bean>
        <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
                <property name="entityManagerFactory" ref="entityManagerFactory" />
        </bean> 
        
        <tx:annotation-driven transaction-manager="transactionManager" />
        
        
    </beans>  